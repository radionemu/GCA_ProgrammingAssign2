#version 430 core

uniform sampler2D TextureSampler;

in vec2 UV;

out vec3 color;

mat3 sx = mat3(
	1.0, 2.0, 1.0,
	0.0, 0.0, 0.0,
	-1.0, -2.0, -1.0
);

mat3 sy = mat3(
	1.0, 0.0, -1.0,
	2.0, 0.0, -2.0,
	1.0, 0.0, -1.0
);

void main()
{
	vec2 newcoord = vec2(UV.x, 1-UV.y);

	//color = vec3(1) - texture(TextureSampler,vec2(UV.x,1-UV.y)).rgb;
	vec3 aa = (texture(TextureSampler,vec2(UV.x,1-UV.y)).rgb);
	//sobel Edge Detect
	mat3 Iden;
	for(int i=0; i<3; i++){
		for(int j=0; j<3; j++){
			vec3 ssample = texelFetch(TextureSampler, ivec2(gl_FragCoord.x*0.85, (-gl_FragCoord.y*0.85)+512)+ivec2(i-1,j-1),0).rgb;
			Iden[i][j] = length(ssample);
		}
	}
	float gx = dot(sx[0], Iden[0]) + dot(sx[1], Iden[1])+ dot(sx[2], Iden[2]);
	float gy = dot(sy[0], Iden[0]) + dot(sy[1], Iden[1])+ dot(sy[2], Iden[2]);
	float g = sqrt(pow(gx,2.0)+pow(gy,2.0));
	//color = vec3(aa);

	//toon
	color = vec3(ivec3((aa)*3)+1.0)/3-vec3(g*0.8);

	//vec3 c0 = (texture(TextureSampler,vec2(UV.x,1-UV.y)).rgb);
	//vec3 c1 = textureOffset(TextureSampler, newcoord, ivec2(-1,0)).rgb;
	//vec3 c2 = textureOffset(TextureSampler, newcoord, ivec2(1,0)).rgb;
	//vec3 c3 = textureOffset(TextureSampler, newcoord, ivec2(0,-1)).rgb;
	//vec3 c4 = textureOffset(TextureSampler, newcoord, ivec2(0,1)).rgb;
	//vec3 cc = (c1+c2+c3+c4)/4 - c0;
	//if(length(cc) > 0.1){
		//color = vec3(1,1,1);
	//}else{
		//color = vec3(0,0,0);
	//}

}
